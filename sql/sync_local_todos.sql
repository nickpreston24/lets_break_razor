insert into todos (content, description) values ('make this a sample, for now.  then upgrade to actually call myget for updates...'),
('aggregate all the awaited tasks and their results, then return them.'),
(':Fix the faulty deserialization.'),
('fix deser...'),
('ist.com/help/articles/introduction-to-filters-V98wIH'),
('.Dump("task");'),
('process line'),
('Replace with Selector's implementation when C# 8.0 comes out.'),
('Fix the httpclient factory'),
('await db.Todos.AddAsync(record);'),
('List:'),
('ist.com/inspiration/organize-your-finances,Other bookmarks,,2023-09-20T23:38:47.326Z,https://tdinspiration.wpengine.com/wp-content/uploads/2020/12/4_HowToOrganizeYourFinances_thumbnail-1.jpg,,true'),
('ist.com/inspiration/todoist-labels-filters,Freelancing,,2023-11-26T13:07:11.879Z,https://tdinspiration.wpengine.com/wp-content/uploads/2015/11/Thumbnail_image4.png,,false'),
('ist.com/help/articles/add-files-and-links-to-todoist-from-your-mobile-devices-zez9K3cj,MMI,,2024-02-07T23:19:46.996Z,https://todoist.com/static/ogimages/en/og-image-hc.png,,true'),
('ist.com/inspiration/hidden-features-todoist#Add_emails_Gmail,MMI,,2024-02-07T10:58:07.447Z,https://tdinspiration.wpengine.com/wp-content/uploads/2020/02/little-known-todoist-features_thumbnail.png,,true'),
('ist.com/inspiration/todoist-sections,MMI,,2024-02-07T08:38:42.780Z,https://tdinspiration.wpengine.com/wp-content/uploads/2019/10/Y_How-to-use-sections-with-Todoist-Blog-Post_V02.png,,false'),
('ist.com/inspiration/todoist-filters,MMI,,2023-11-26T14:24:52.207Z,https://tdinspiration.wpengine.com/wp-content/uploads/2020/07/Filters_thumbnail_Sonny.jpg,,true'),
('Deserialize JSON'),
('Copy / saveas each file (outside this loop, preferably)'),
('Move to CodeMechanic.Types lib if you can.'),
('allow dashes in shargs regex!!  Example: `code-mechanic` gets parsed as `code`!!'),
('this is broken as of ver. 1.0.2 and needs fixing.  Prolly the regex.'),
('extract this as well, and update to latest.'),
('finish'),
('add more!'),
('save via api.'),
('fix edge cases  like '9th', '3rd', '31st'.  It's just the 2nd digit that drives that.'),
('return count of all cleared.'),
('fix'),
('We want the dotnet core default ILogger here, if this is not the correct one.'),
('finish this by creating some hefty work for it to do:'),
('switch on type, checking for strings, ints and datetimes'),
('DirectoryExtensions.GetProjectDirectory();'),
('Update this to include Dictionary (below)'),
('this doesn't properly get the correct type on the lefthand side when TOject actually is a string.'),
('Deep clone, like Immer'),
('Switch on conditions being true, running the first one to be true on the associated Action.'),
('Finish this'),
('Finish this'),
('Make this class only return a subset of the class, not all properties, if possible.'),
('integrate this?'),
('Fix the dependency issue first!'),
('update this to a no-op'),
('calculate all other timespans:'),
('add a cast to long in this dictionary somehow'),
('make this calculate the exact unit, e.g. Seconds + MS, etc.'),
('Move to CodeMechanic.Types lib if you can.'),
('use grepper to read all .json files context...'),
('Refactor this somehow?  Maybe builder?  IT's kinda gross :P'),
('Interactive Cleaning Mode that prompts cleanup of different files'),
('make this an Enumeration'),
('Make this an extension so we don't repeat code'),
('replace groups with the question markthingie.'),
('replace groups with the question markthingie.");'),
('Make a snappier way to check if the command is valid.'),
('write a better implementation for grabbing the flag value(s)'),
('run a serialqueue or async ienumerable copy/paste job from one folder to another.'),
('Prompt the user for overwrites.'),
('Improvements I can make to this strategy: https://markheath.net/post/async-enumerable-2'),
('use the Regex version, not the pattern string version. minor fix.'),
('List:'),
('fix outside of bounds bug.'),
(': use this to get shapes of data if you have to:'),
('you've implemented this somewhere else already.  Go find it and upload it as a myget, then call it here.'),
('s.Dump(nameof(OnGetSortedTreadmill));'),
('finish reseting the todos by the age of dueness.'),
('find a use case where you'd need to update multiple rows.'),
('s = myData.TodosCollection;'),
('add create permissions, then re-run the pb generate... (ugh...)'),
('s.Add(newTask);'),
('s = new List<Todo>()'),
('you've implemented this somewhere else already.  Go find it and upload it as a myget, then call it here.'),
('await db.Todos.AddAsync(record);'),
('s_from_source_files.Take(10).Dump();'),
('Make this conditional between an array of objects and a single object.'),
('this doesn't properly get the correct type on the lefthand side when TOject actually is a string.'),
('Deep clone, like Immer'),
('Switch on conditions being true, running the first one to be true on the associated Action.'),
('load all tables & ids'),
('Global Error handling:'),
('Move these to a special JSON API (Parsely)'),
('getAll() is not getting all the fieldInfo[] and needs fixing.'),
('this doesn't properly get the correct type on the lefthand side when TOject actually is a string.'),
('create a view for updates with bumps'),
('finish'),
('update to match cliwrap's tutorial'),
('Increment the count on each request'),
('https://regex101.com/r/qYhFGD/1'),
('https://regex101.com/r/qYhFGD/1'),
('this doesn't properly get the correct type on the lefthand side when TOject actually is a string.'),
('Deep clone, like Immer'),
('Switch on conditions being true, running the first one to be true on the associated Action.'),
('finish the implementation!'),
('Use this as a model for rendering a Daisy alert or a toast message that indicates success'),
('Move these to a special JSON API (Parsely)'),
('Move this entire file to your CodeMechanic repo'),
('this doesn't properly get the correct type on the lefthand side when TOject actually is a string.'),
('Deep clone, like Immer'),
('Switch on conditions being true, running the first one to be true on the associated Action.'),
('fix disabling specific routes via config.'),
('use the If<T>(...) method you found'),
('implement that awesome Enum code you found which makes strings to Enum support easy, OR install a Nuget you found that does the same.'),
('let the user set the pagination function, e.g. (offset, pagesize, max, step, etc).  Easily done, with one Func, vs a bunch of props.  Possible to use the NSpecification library to easily implement this w/o too much hard work.'),
('move to extensions - conflicts w/ Dapper's automapper >:('),
('fix literal quotes'),
('you've implemented this somewhere else already.  Go find it and upload it as a myget, then call it here.'),
('finish'),
('update to minutes when in production.'),
('update to minutes when in production.'),
('add more!'),
(': use this to get shapes of data if you have to:'),
('use the httpclientfactory pattern later.'),
('make a server for this one...  https://stackoverflow.com/questions/42393063/load-local-html-on-iframe'),
('figure out how to load this crummy npm package without using a CDN.  Currenly having trouble loading it as a module b/c of some stupid 'kurkle' error, explained here:'),
('fix this deser.'),
('this needs fixing.  Apparently, I'm sending the wrong model? (I don't bloody know, b/c they don't send helpful message back!'),
(':Uncomment and fix... I refactored the readme_service to be in CodeMechanic, which was a mistake.'),
('needs fixing'),
('save blade states on toggle events, then have it load into blades obj.'),
('load specific by ui.'),
('have max_exercises be based off of lines extracted from the template'),
('remove!'),
('update this to support hours, and also update the regex and model'),
('unencode the names, or map to correct props, somehow...'),
('ist.com" target="_blank">'),
('The business type code (PCI?).'),
('Work on supporting more of these in a json config:'),
('Search for Watch tags in the current .csproj and check that they include .config.js*'),
('https://regex101.com/r/qYhFGD/1'),
('make this the currently selected build'),
('There's a bug here with the ellapsed times being wildly different for the EXACT SAME QUERY.  Weird.'),
('Maybe a string.format could be passed for things like MustachesJS or Handlebars?  Maybe I'll try it sometime...'),
('still needs work.  objects are fine, but ints need more reflection drilling...'),
('finish updating all warnings.'),
('learn to get the variable from echo or bashrc.  For now, use .env'),
('There's a bug when Prompt.Select is run inside a task.  Try moving this to the cotr. be called synchronously.'),
('test this once your myget is restored to using packages over 1.0.0.'),
('find `no_warn.md` under /projects, and add all CS* warnings'),
('Update the RazorHAT templater to read these warnings from: https://gist.github.com/nickpreston24/47192fef7be0a0c6b3b958fc0e67d061'),
('Eventually, I'd like to port this over to a daemon service.'),
('_lines.Count.Dump("total todo comments", printFn: Console.WriteLine);'),
('re-merge all lines whose filename (and path) are identical.'),
('use hydrolizer.cs code instead...'),
('if folder not found, prompt again'),
('pagify'),
('fix the CsModelPattern, it's not working rn.'),
('finish Support for --help'),
('find conflicts/existing scriptures first'),
(': NEEDS WORK: https://regex101.com/r/CFo57C/1'),
('coordinate this with the current theme'),
('s.Dump(nameof(OnGetSortedTreadmill));'),
('finish reseting the todos by the age of dueness.'),
('find a use case where you'd need to update multiple rows.'),
('s = myData.TodosCollection;'),
('add create permissions, then re-run the pb generate... (ugh...)'),
('s.Add(newTask);'),
('s = new List<Todo>()'),
('load sprocs using CodeMechanic.MySql sproc repository...'),
('ist.com" target="_blank">'),
('coordinate this with the current theme'),
('coordinate this with the current theme *@'),
('Make this conditional between an array of objects and a single object.'),
('Move these to a special JSON API (Parsely)'),
('add name to query'),
('Idk why unwind refuses to work.  just use something else.'),
('implement an hx-get to the handler on selected option (trigger)'),
('This is just a default. Allow override with svg.'),
('Log this record to Airtable or some other SQL DB like Postgres...'),
('modifiy the replaces to be regex replacing the START of the method name, just to be perfectly accurate'),
('make this change with the current tab:'),
('Make sure to return only events with 'published' status for non-admins'),
('generate gap from setter'),
('needs fixing ,things are not centered'),
('Log this record to Airtable or some other SQL DB like Postgres...'),
('aggregate all the awaited tasks and their results, then return them.'),
(':Fix the faulty deserialization.'),
('fix deser...'),
('ist.com/help/articles/introduction-to-filters-V98wIH'),
('regex check path type'),
('This is just a default. Allow override with svg.'),
('Log this record to Airtable or some other SQL DB like Postgres...'),
('Move these to a special JSON API (Parsely)'),
('Log this record to Airtable or some other SQL DB like Postgres...'),
('Search for Watch tags in the current .csproj and check that they include .config.js*'),
('run query.'),
('look for a way to sync Alpine.js and C# in THIS service...'),
('https://regex101.com/r/qYhFGD/1'),
('Work on supporting more of these'),
('need to unencrypt airtable rows.'),
('FIX MEEEEE!!!! *@'),
('temporary, until I can perfect the EmbeddedResources.cs'),
('needs fixing ,things are not centered'),
('This is just a default. Allow override with svg.'),
('Log this record to Airtable or some other SQL DB like Postgres...'),
('Make a PatternBuilderVisitor that runs pattern generation when the derived implementation fails'),
('loop thru all RegexPattern Attributes and validate them'),
('add a cast to long in this dictionary somehow'),
('coordinate this with the current theme'),
('you've implemented this somewhere else already.  Go find it and upload it as a myget, then call it here.'),
('Neither of these are working.'),
('Finish this as a GET request:'),
('persist this to a database'),
('add support for "" and spaces!'),
('fix the following retarded error:'),
('forklift this functionality to it own private method.'),
('add cdn links'),
('make this a config.json with versions, cdns, alternate urls, etc.'),
('update for -o having a value of '.' or './''),
('finish iterating through model name and properties'),
('https://makolyte.com/csharp-how-to-make-concurrent-requests-with-httpclient/#Use_a_single_instance_of_HttpClient'),
('grab the base info by table name and feed it to ScriptTableAs to finish this feature.'),
('update with non-digit symbols'),
('I think the API key is not being retrieved, and the process is therefore not run. (not getting errors).'),
('embed resource.'),
('Make this a command after you update the regex to include commands again.'),
('coordinate this with the current theme'),
('Obviously, we want to read this from .env in the future.'),
('generate gap from setter'),
('needs fixing ,things are not centered'),
('find something that works! *@'),
(': render, given the current page'),
('Obviously, we want to read this from .env in the future.'),
('use the embeds service, instead.'),
('init from db'),
('put in your XmlStreamer class'),
('make recursive for objects in the dictionary with more levels.'),
('coordinate this with the current theme'),
('Maybe a string.format could be passed for things like MustachesJS or Handlebars?  Maybe I'll try it sometime...'),
('https://regex101.com/r/qYhFGD/1'),
('coordinate this with the current theme')